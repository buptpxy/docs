1. sequelize-auto会以命令行的形式自动生成SequelizeJS的模型Model。
	
	要以命令行的形式使用需要全局安装模块：
	npm install -g sequelize-auto
2. 如果使用MySQL/MariaDB，需要安装mysql：
	npm install -g mysql

	如果使用Postgres，需要安装pg、pg-hstore两个模块：
	npm install -g pg pg-hstore

	使用Sqlite3需要安装sqlite：
	npm install -g sqlite

	使用MSSQL请安装tedious：
	npm install -g tedious
3.  全局安装sequelize-auto安装及依赖模块后，就可使用该模块生成模型了。语法结构如下：

 sequelize-auto -h  -d  -u  -x [password] -p [port]  --dialect [dialect] -c [/path/to/config] -o [/path/to/models] -t [tableName]

 在以上参数中，除-h、-d参数外，其它参数都是可选的。各参数选项说明如下：

-h, --host - 数据库的IP/主机名 [必选]
-d, --database - 数据库名 [必选]
-u, --user - 数据库的用户名。默认将根据数据库类型的默认用户生成数据库名
-x, --pass - 数据库的密码。默认为空
-p, --port - 数据库连接端口。默认为所使用数据库类型的默认端口号
-c, --config - JSON文件，用于Sequelize构造函数的'options'选项对象。参见：http://itbilu.com/nodejs/npm/VkYIaRPz-.html#api-init
-o, --output - 模型输出目录。默认会在当前目录下生成'./models'目录
-e, --dialect - 所使用的数据库类型(驱动类型)。默认为mysql
-a, --additional - 一个包含模型定义参数的JSON文件。参见：http://itbilu.com/nodejs/npm/VkYIaRPz-.html#api-instance-define
-t, --tables - 指定所要导出的表，逗号分隔。默认为全部

示例：

sequelize-auto -h localhost -d pxy -u root -x 123456 -p 3306 -o "./models" -t products,categories

在使用sequelize-auto时，传入参数也可以更简单一些。如：只设置mysql的用户和密码，就可以像下在这样：

sequelize-auto -h localhost -d mydb -u root -x 111111 